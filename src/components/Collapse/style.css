.collapse-example{
    font-family: 'Rawline', serif;
    height: 10%;
    width: 100%;
}
.br-list{
    padding-left: 60px;
}

.br-checkbox {
    --checkbox-padding: var(--spacing-scale-base);
    --checkbox-size: 24px;
    display: block;
    line-height: 0px;
}
.br-checkbox label {
    color: var(--color);
    cursor: pointer;
    display: inline-block;
    font-weight: var(--font-weight-medium);
    line-height: 1.6em;
    min-height: var(--checkbox-size);
    padding-left: calc(var(--checkbox-size) + var(--checkbox-padding));
    position: relative;
}
.br-checkbox label:empty {
    padding-left: var(--checkbox-size);
}
.br-checkbox.hidden-label label {
    padding-left: calc(var(--checkbox-size) + var(--surface-width-md) * 2);
    text-indent: -10000px;
    white-space: nowrap;
    width: 0;
}
.br-checkbox.d-inline label {
    padding-right: var(--spacing-scale-4x);
}
.br-checkbox input {
    opacity: 0;
    position: absolute;
}
.br-checkbox input:focus-visible:checked + label::before,
.br-checkbox input:focus-visible + label::before, .br-checkbox input.focus-visible:checked + label::before,
.br-checkbox input.focus-visible + label::before {
    border-color: var(--focus) !important;
    box-shadow: 0 0 0 var(--surface-width-md) var(--focus);
    outline: none;
}
.br-checkbox input:hover:not(:disabled) + label::before {
    --interactive-rgb: var(--interactive-light-rgb);
    background-image: linear-gradient(rgba(var(--interactive-rgb), var(--hover)), rgba(var(--interactive-rgb), var(--hover)));
}
.br-checkbox input:disabled + label {
    cursor: not-allowed;
    opacity: var(--disabled);
}
.br-checkbox input:disabled + label * {
    pointer-events: none;
}
.br-checkbox input:disabled + label:hover::before {
    background-image: none;
}
.br-checkbox input + label {
    align-items: flex-start;
    cursor: pointer;
    display: inline-block;
    font-size: var(--font-size-scale-base);
    font-weight: var(--font-weight-medium);
    min-height: var(--spacing-scale-3x);
    position: relative;
}
.br-checkbox input + label::before {
    background: var(--background-light);
    border-color: var(--border-color);
    border-radius: 4px;
    border-style: solid;
    border-width: 1px;
    content: "";
    height: var(--checkbox-size);
    left: 0;
    position: absolute;
    width: var(--checkbox-size);
}
.br-checkbox input + label:empty {
    padding-left: var(--spacing-scale-3x);
}
.br-checkbox input[indeterminate] {
    color: var(--color-d);
}
.br-checkbox input[indeterminate] + label::before {
    --interactive-rgb: var(--color-rgb);
    background: var(--selected);
    border-color: var(--selected);
}
.br-checkbox input[indeterminate]:hover:not(:disabled) + label::before {
    --interactive-rgb: var(--color-dark-rgb);
}
.br-checkbox input:checked + label::after {
    border: solid var(--selected);
    border-width: 0 3px 3px 0;
    content: "";
    height: var(--icon-size-sm);
    left: 8px;
    position: absolute;
    top: 4px;
    transform: rotate(45deg);
    width: 8px;
}
.br-checkbox input:checked[indeterminate] + label::after {
    border-color: var(--background-light);
    border-width: 0 0 3px;
    top: 2px;
    transform: none;
}
.br-checkbox input:invalid + label::before {
    --border-color: var(--danger);
    border-width: 2px;
}
.br-checkbox input:disabled + label::before {
    box-shadow: none;
}
.br-checkbox.is-small input[type=checkbox] + label, .br-checkbox.small input[type=checkbox] + label, .br-checkbox[small] input[type=checkbox] + label {
    line-height: var(--spacing-scale-2xh);
    min-height: var(--spacing-scale-2xh);
}
.br-checkbox.is-small input[type=checkbox] + label::before, .br-checkbox.small input[type=checkbox] + label::before, .br-checkbox[small] input[type=checkbox] + label::before {
    height: var(--spacing-scale-2xh);
    width: var(--spacing-scale-2xh);
}
.br-checkbox.is-small input[type=checkbox]:checked + label::after, .br-checkbox.small input[type=checkbox]:checked + label::after, .br-checkbox[small] input[type=checkbox]:checked + label::after {
    border-width: 0 2px 2px 0;
    height: var(--icon-size-sm);
    left: 7px;
    top: 6px;
    width: 6px;
}
.br-checkbox.is-small input[type=checkbox]:checked[indeterminate] + label::after, .br-checkbox.small input[type=checkbox]:checked[indeterminate] + label::after, .br-checkbox[small] input[type=checkbox]:checked[indeterminate] + label::after {
    border-color: var(--background-light);
    border-width: 0 0 3px;
    top: 2px;
    transform: none;
}
.br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before, .br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before, .br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before {
    --border-color: var(--danger);
    border-width: 2px;
}
.br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before, .br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before, .br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before {
    --border-color: var(--focus-color);
}
.br-checkbox.is-invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before, .br-checkbox.invalid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before, .br-checkbox[invalid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before {
    --border-color: var(--danger);
}
.br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before, .br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before, .br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox] + label::before {
    --border-color: var(--success);
    border-width: 2px;
}
.br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before, .br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before, .br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible:checked + label::before,
.br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:focus-visible + label::before, .br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible:checked + label::before,
.br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox].focus-visible + label::before {
    --border-color: var(--focus-color);
}
.br-checkbox.is-valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before, .br-checkbox.valid:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before, .br-checkbox[valid]:not(.is-inverted):not(.inverted):not([inverted]) input[type=checkbox]:checked + label::before {
    --border-color: var(--success);
}
.br-checkbox.inverted,
.br-checkbox.inverted label, .br-checkbox.dark-mode,
.br-checkbox.dark-mode label {
    color: var(--color-dark);
}

/*# sourceMappingURL=checkbox.css.map*/

